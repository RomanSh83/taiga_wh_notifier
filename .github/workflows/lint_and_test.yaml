name: Lint and Test project

on:
  push:
    branches-ignore:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: 'pip'

      - name: Cache pre-commit hooks
        id: cache-pre-commit
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: ${{ runner.os }}-pre-commit-cache
          restore-keys: |
            ${{ runner.os }}-pre-commit-cache

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install uv
          uv sync
          uv run pre-commit install

      - name: Lint pre-commit
        run: uv run pre-commit run --all-files --hook-stage manual

      - name: Run Telegram Notify Action
        uses: proDreams/actions-telegram-notifier@main
        if: always()
        with:
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          chat_id: ${{ secrets.TELEGRAM_CHAT_ID }}
          thread_id: ${{ secrets.TELEGRAM_THREAD_ID }}
          status: ${{ job.status }}
          notify_fields: "actor,repository,branch,commit"
          message: "Job: pre-commit linters"

  test:
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install uv
          uv sync

      - name: Create settings.yaml
        run: mv config/settings.yaml.example config/settings.yaml

      - name: Run PyTest
        run: ENV_FOR_DYNACONF=test uv run pytest

      - name: Run Telegram Notify Action
        uses: proDreams/actions-telegram-notifier@main
        if: always()
        with:
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          chat_id: ${{ secrets.TELEGRAM_CHAT_ID }}
          thread_id: ${{ secrets.TELEGRAM_THREAD_ID }}
          status: ${{ job.status }}
          notify_fields: "actor,repository,branch,commit"
          message: "Job: PyTests"
